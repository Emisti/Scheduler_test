{"version":3,"file":"horsa-scheduler.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["const YEAR = 'year';\r\nconst MONTH = 'month';\r\nconst DAY = 'day';\r\nconst HOUR = 'hour';\r\nconst MINUTE = 'minute';\r\nconst SECOND = 'second';\r\nconst MILLISECOND = 'millisecond';\r\n\r\nexport default {\r\n    parse(date, date_separator = '-', time_separator = /[.:]/) {\r\n        if (date instanceof Date) {\r\n            return date;\r\n        }\r\n        if (typeof date === 'string') {\r\n            let date_parts, time_parts;\r\n            const parts = date.split(' ');\r\n\r\n            date_parts = parts[0]\r\n                .split(date_separator)\r\n                .map((val) => parseInt(val, 10));\r\n            time_parts = parts[1] && parts[1].split(time_separator);\r\n\r\n            // month is 0 indexed\r\n            date_parts[1] = date_parts[1] - 1;\r\n\r\n            let vals = date_parts;\r\n\r\n            if (time_parts && time_parts.length) {\r\n                if (time_parts.length == 4) {\r\n                    time_parts[3] = '0.' + time_parts[3];\r\n                    time_parts[3] = parseFloat(time_parts[3]) * 1000;\r\n                }\r\n                vals = vals.concat(time_parts);\r\n            }\r\n\r\n            return new Date(...vals);\r\n        }\r\n    },\r\n\r\n    to_string(date, with_time = false) {\r\n        if (!(date instanceof Date)) {\r\n            throw new TypeError('Invalid argument type');\r\n        }\r\n        const vals = this.get_date_values(date).map((val, i) => {\r\n            if (i === 1) {\r\n                // add 1 for month\r\n                val = val + 1;\r\n            }\r\n\r\n            if (i === 6) {\r\n                return padStart(val + '', 3, '0');\r\n            }\r\n\r\n            return padStart(val + '', 2, '0');\r\n        });\r\n        const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`;\r\n        const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`;\r\n\r\n        return date_string + (with_time ? ' ' + time_string : '');\r\n    },\r\n\r\n    format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\r\n        const dateTimeFormat = new Intl.DateTimeFormat(lang, {\r\n            month: 'long'\r\n        });\r\n        const month_name = dateTimeFormat.format(date);\r\n        const month_name_capitalized =\r\n            month_name.charAt(0).toUpperCase() + month_name.slice(1);\r\n\r\n        const values = this.get_date_values(date).map(d => padStart(d, 2, 0));\r\n        const format_map = {\r\n            YYYY: values[0],\r\n            MM: padStart(+values[1] + 1, 2, 0),\r\n            DD: values[2],\r\n            HH: values[3],\r\n            mm: values[4],\r\n            ss: values[5],\r\n            SSS: values[6],\r\n            D: values[2],\r\n            MMMM: month_name_capitalized,\r\n            MMM: month_name_capitalized,\r\n        };\r\n\r\n        let str = format_string;\r\n        const formatted_values = [];\r\n\r\n        Object.keys(format_map)\r\n            .sort((a, b) => b.length - a.length) // big string first\r\n            .forEach((key) => {\r\n                if (str.includes(key)) {\r\n                    str = str.replace(key, `$${formatted_values.length}`);\r\n                    formatted_values.push(format_map[key]);\r\n                }\r\n            });\r\n\r\n        formatted_values.forEach((value, i) => {\r\n            str = str.replace(`$${i}`, value);\r\n        });\r\n\r\n        return str;\r\n    },\r\n\r\n    diff(date_a, date_b, scale = DAY) {\r\n        let milliseconds, seconds, hours, minutes, days, months, years;\r\n\r\n        milliseconds = date_a - date_b;\r\n        seconds = milliseconds / 1000;\r\n        minutes = seconds / 60;\r\n        hours = minutes / 60;\r\n        days = hours / 24;\r\n        months = days / 30;\r\n        years = months / 12;\r\n\r\n        if (!scale.endsWith('s')) {\r\n            scale += 's';\r\n        }\r\n\r\n        return Math.floor(\r\n            {\r\n                milliseconds,\r\n                seconds,\r\n                minutes,\r\n                hours,\r\n                days,\r\n                months,\r\n                years,\r\n            }[scale]\r\n        );\r\n    },\r\n\r\n    today() {\r\n        const vals = this.get_date_values(new Date()).slice(0, 3);\r\n        return new Date(...vals);\r\n    },\r\n\r\n    now() {\r\n        return new Date();\r\n    },\r\n\r\n    add(date, qty, scale) {\r\n        qty = parseInt(qty, 10);\r\n        const vals = [\r\n            date.getFullYear() + (scale === YEAR ? qty : 0),\r\n            date.getMonth() + (scale === MONTH ? qty : 0),\r\n            date.getDate() + (scale === DAY ? qty : 0),\r\n            date.getHours() + (scale === HOUR ? qty : 0),\r\n            date.getMinutes() + (scale === MINUTE ? qty : 0),\r\n            date.getSeconds() + (scale === SECOND ? qty : 0),\r\n            date.getMilliseconds() + (scale === MILLISECOND ? qty : 0),\r\n        ];\r\n        return new Date(...vals);\r\n    },\r\n\r\n    start_of(date, scale) {\r\n        const scores = {\r\n            [YEAR]: 6,\r\n            [MONTH]: 5,\r\n            [DAY]: 4,\r\n            [HOUR]: 3,\r\n            [MINUTE]: 2,\r\n            [SECOND]: 1,\r\n            [MILLISECOND]: 0,\r\n        };\r\n\r\n        function should_reset(_scale) {\r\n            const max_score = scores[scale];\r\n            return scores[_scale] <= max_score;\r\n        }\r\n\r\n        const vals = [\r\n            date.getFullYear(),\r\n            should_reset(YEAR) ? 0 : date.getMonth(),\r\n            should_reset(MONTH) ? 1 : date.getDate(),\r\n            should_reset(DAY) ? 0 : date.getHours(),\r\n            should_reset(HOUR) ? 0 : date.getMinutes(),\r\n            should_reset(MINUTE) ? 0 : date.getSeconds(),\r\n            should_reset(SECOND) ? 0 : date.getMilliseconds(),\r\n        ];\r\n\r\n        return new Date(...vals);\r\n    },\r\n\r\n    clone(date) {\r\n        return new Date(...this.get_date_values(date));\r\n    },\r\n\r\n    get_date_values(date) {\r\n        return [\r\n            date.getFullYear(),\r\n            date.getMonth(),\r\n            date.getDate(),\r\n            date.getHours(),\r\n            date.getMinutes(),\r\n            date.getSeconds(),\r\n            date.getMilliseconds(),\r\n        ];\r\n    },\r\n\r\n    get_days_in_month(date) {\r\n        const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\n        const month = date.getMonth();\r\n\r\n        if (month !== 1) {\r\n            return no_of_days[month];\r\n        }\r\n\r\n        // Feb\r\n        const year = date.getFullYear();\r\n        if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            return 29;\r\n        }\r\n        return 28;\r\n    },\r\n};\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\r\nfunction padStart(str, targetLength, padString) {\r\n    str = str + '';\r\n    targetLength = targetLength >> 0;\r\n    padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n    if (str.length > targetLength) {\r\n        return String(str);\r\n    } else {\r\n        targetLength = targetLength - str.length;\r\n        if (targetLength > padString.length) {\r\n            padString += padString.repeat(targetLength / padString.length);\r\n        }\r\n        return padString.slice(0, targetLength) + String(str);\r\n    }\r\n}\r\n","export function $(expr, con) {\r\n    return typeof expr === 'string'\r\n        ? (con || document).querySelector(expr)\r\n        : expr || null;\r\n}\r\n\r\nexport function createSVG(tag, attrs) {\r\n    const elem = document.createElementNS('http://www.w3.org/2000/svg', tag);\r\n    for (let attr in attrs) {\r\n        if (attr === 'append_to') {\r\n            const parent = attrs.append_to;\r\n            parent.appendChild(elem);\r\n        } else if (attr === 'innerHTML') {\r\n            elem.innerHTML = attrs.innerHTML;\r\n        } else {\r\n            elem.setAttribute(attr, attrs[attr]);\r\n        }\r\n    }\r\n    return elem;\r\n}\r\n\r\nexport function animateSVG(svgElement, attr, from, to) {\r\n    const animatedSvgElement = getAnimationElement(svgElement, attr, from, to);\r\n\r\n    if (animatedSvgElement === svgElement) {\r\n        // triggered 2nd time programmatically\r\n        // trigger artificial click event\r\n        const event = document.createEvent('HTMLEvents');\r\n        event.initEvent('click', true, true);\r\n        event.eventName = 'click';\r\n        animatedSvgElement.dispatchEvent(event);\r\n    }\r\n}\r\n\r\nfunction getAnimationElement(\r\n    svgElement,\r\n    attr,\r\n    from,\r\n    to,\r\n    dur = '0.4s',\r\n    begin = '0.1s'\r\n) {\r\n    const animEl = svgElement.querySelector('animate');\r\n    if (animEl) {\r\n        $.attr(animEl, {\r\n            attributeName: attr,\r\n            from,\r\n            to,\r\n            dur,\r\n            begin: 'click + ' + begin, // artificial click\r\n        });\r\n        return svgElement;\r\n    }\r\n\r\n    const animateElement = createSVG('animate', {\r\n        attributeName: attr,\r\n        from,\r\n        to,\r\n        dur,\r\n        begin,\r\n        calcMode: 'spline',\r\n        values: from + ';' + to,\r\n        keyTimes: '0; 1',\r\n        keySplines: cubic_bezier('ease-out'),\r\n    });\r\n    svgElement.appendChild(animateElement);\r\n\r\n    return svgElement;\r\n}\r\n\r\nfunction cubic_bezier(name) {\r\n    return {\r\n        ease: '.25 .1 .25 1',\r\n        linear: '0 0 1 1',\r\n        'ease-in': '.42 0 1 1',\r\n        'ease-out': '0 0 .58 1',\r\n        'ease-in-out': '.42 0 .58 1',\r\n    }[name];\r\n}\r\n\r\n$.on = (element, event, selector, callback) => {\r\n    if (!callback) {\r\n        callback = selector;\r\n        $.bind(element, event, callback);\r\n    } else {\r\n        $.delegate(element, event, selector, callback);\r\n    }\r\n};\r\n\r\n$.off = (element, event, handler) => {\r\n    element.removeEventListener(event, handler);\r\n};\r\n\r\n$.bind = (element, event, callback) => {\r\n    event.split(/\\s+/).forEach(function (event) {\r\n        element.addEventListener(event, callback);\r\n    });\r\n};\r\n\r\n$.delegate = (element, event, selector, callback) => {\r\n    element.addEventListener(event, function (e) {\r\n        const delegatedTarget = e.target.closest(selector);\r\n        if (delegatedTarget) {\r\n            e.delegatedTarget = delegatedTarget;\r\n            callback.call(this, e, delegatedTarget);\r\n        }\r\n    });\r\n};\r\n\r\n$.closest = (selector, element) => {\r\n    if (!element) return null;\r\n\r\n    if (element.matches(selector)) {\r\n        return element;\r\n    }\r\n\r\n    return $.closest(selector, element.parentNode);\r\n};\r\n\r\n$.attr = (element, attr, value) => {\r\n    if (!value && typeof attr === 'string') {\r\n        return element.getAttribute(attr);\r\n    }\r\n\r\n    if (typeof attr === 'object') {\r\n        for (let key in attr) {\r\n            $.attr(element, key, attr[key]);\r\n        }\r\n        return;\r\n    }\r\n\r\n    element.setAttribute(attr, value);\r\n};\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG, animateSVG } from './svg_utils';\r\n\r\nexport default class Bar {\r\n    constructor(scheduler, task) {\r\n        this.set_defaults(scheduler, task);\r\n        this.prepare();\r\n        this.draw();\r\n        this.bind();\r\n    }\r\n\r\n    set_defaults(scheduler, task) {\r\n        this.action_completed = false;\r\n        this.scheduler = scheduler;\r\n        this.task = task;\r\n    }\r\n\r\n    prepare() {\r\n        this.prepare_values();\r\n        this.prepare_helpers();\r\n    }\r\n\r\n    prepare_values() {\r\n        this.invalid = this.task.invalid;\r\n        this.height = this.scheduler.options.bar_height;\r\n        this.handle_width = 8;\r\n        this.x = this.compute_x();\r\n        this.y = this.compute_y();\r\n        this.corner_radius = this.scheduler.options.bar_corner_radius;\r\n        this.duration =\r\n            date_utils.diff(this.task._end, this.task._start, 'hour') /\r\n            this.scheduler.options.step;\r\n        this.width = this.scheduler.options.column_width * this.duration;\r\n        this.progress_width =\r\n            this.scheduler.options.column_width *\r\n            this.duration *\r\n            (this.task.progress / 100) || 0;\r\n        this.group = createSVG('g', {\r\n            class: 'bar-wrapper ' + (this.task.custom_class || ''),\r\n            'data-id': this.task.id,\r\n        });\r\n        this.bar_group = createSVG('g', {\r\n            class: 'bar-group',\r\n            append_to: this.group,\r\n        });\r\n        this.handle_group = createSVG('g', {\r\n            class: 'handle-group',\r\n            append_to: this.group,\r\n        });\r\n    }\r\n\r\n    prepare_helpers() {\r\n        SVGElement.prototype.getX = function () {\r\n            return +this.getAttribute('x');\r\n        };\r\n        SVGElement.prototype.getY = function () {\r\n            return +this.getAttribute('y');\r\n        };\r\n        SVGElement.prototype.getWidth = function () {\r\n            return +this.getAttribute('width');\r\n        };\r\n        SVGElement.prototype.getHeight = function () {\r\n            return +this.getAttribute('height');\r\n        };\r\n        SVGElement.prototype.getEndX = function () {\r\n            return this.getX() + this.getWidth();\r\n        };\r\n    }\r\n\r\n    draw() {\r\n        this.draw_bar();\r\n        this.draw_progress_bar();\r\n        this.draw_label();\r\n        this.draw_resize_handles();\r\n    }\r\n\r\n    draw_bar() {\r\n        this.$bar = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar, 'width', 0, this.width);\r\n\r\n        if (this.invalid) {\r\n            this.$bar.classList.add('bar-invalid');\r\n        }\r\n    }\r\n\r\n    draw_progress_bar() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress = createSVG('rect', {\r\n            x: this.x,\r\n            y: this.y,\r\n            width: this.progress_width,\r\n            height: this.height,\r\n            rx: this.corner_radius,\r\n            ry: this.corner_radius,\r\n            class: 'bar-progress',\r\n            append_to: this.bar_group,\r\n        });\r\n\r\n        animateSVG(this.$bar_progress, 'width', 0, this.progress_width);\r\n    }\r\n\r\n    draw_label() {\r\n        createSVG('text', {\r\n            x: this.x + this.width / 2,\r\n            y: this.y + this.height / 2,\r\n            innerHTML: this.task.name,\r\n            class: 'bar-label',\r\n            append_to: this.bar_group,\r\n        });\r\n        // labels get BBox in the next tick\r\n        requestAnimationFrame(() => this.update_label_position());\r\n    }\r\n\r\n    draw_resize_handles() {\r\n        if (this.invalid) return;\r\n\r\n        const bar = this.$bar;\r\n        const handle_width = this.handle_width;\r\n\r\n        if (this.task.resize_right)\r\n            createSVG('rect', {\r\n                x: bar.getX() + bar.getWidth() - handle_width - 1,\r\n                y: bar.getY() + 1,\r\n                width: handle_width,\r\n                height: this.height - 2,\r\n                rx: this.corner_radius,\r\n                ry: this.corner_radius,\r\n                class: 'handle right',\r\n                append_to: this.handle_group,\r\n            });\r\n\r\n        if (this.task.resize_left)\r\n            createSVG('rect', {\r\n                x: bar.getX() + 1,\r\n                y: bar.getY() + 1,\r\n                width: handle_width,\r\n                height: this.height - 2,\r\n                rx: this.corner_radius,\r\n                ry: this.corner_radius,\r\n                class: 'handle left',\r\n                append_to: this.handle_group,\r\n            });\r\n\r\n        if (this.task.progress && this.task.progress < 100) {\r\n            this.$handle_progress = createSVG('polygon', {\r\n                points: this.get_progress_polygon_points().join(','),\r\n                class: 'handle progress',\r\n                append_to: this.handle_group,\r\n            });\r\n        }\r\n    }\r\n\r\n    get_progress_polygon_points() {\r\n        const bar_progress = this.$bar_progress;\r\n        return [\r\n            bar_progress.getEndX() - 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX() + 5,\r\n            bar_progress.getY() + bar_progress.getHeight(),\r\n            bar_progress.getEndX(),\r\n            bar_progress.getY() + bar_progress.getHeight() - 8.66,\r\n        ];\r\n    }\r\n\r\n    bind() {\r\n        if (this.invalid) return;\r\n        this.setup_click_event();\r\n    }\r\n\r\n    setup_click_event() {\r\n        $.on(this.group, 'mouseover', '.bar-wrapper', (e) => {\r\n            if (!e.target.classList.contains('bar')) return;\r\n            this.show_popup(e.offsetX);\r\n        });\r\n\r\n        $.on(this.group, 'mouseleave', '.bar-wrapper', (e) => {\r\n            if (e.relatedTarget != null &&\r\n                (e.relatedTarget.classList.contains('pointer') ||\r\n                    e.relatedTarget.classList.contains('title'))) return;\r\n            this.scheduler.hide_popup();\r\n        });\r\n\r\n        $.on(this.group, 'click', (e) => {\r\n            if (this.action_completed) return;\r\n\r\n            this.scheduler.unselect_all();\r\n            this.group.classList.add('active');\r\n        });\r\n\r\n        $.on(this.group, 'dblclick', (e) => {\r\n            if (this.action_completed) {\r\n                // just finished a move action, wait for a few seconds\r\n                return;\r\n            }\r\n\r\n            this.scheduler.trigger_event('task_dblclick', [this.task]);\r\n        });\r\n    }\r\n\r\n    show_popup(x = 0, y = 0) {\r\n        const start_date = date_utils.format(\r\n            this.task._start,\r\n            'MMM D',\r\n            this.scheduler.options.language\r\n        );\r\n        const end_date = date_utils.format(\r\n            date_utils.add(this.task._end, -1, 'second'),\r\n            'MMM D',\r\n            this.scheduler.options.language\r\n        );\r\n        const subtitle = start_date + ' - ' + end_date;\r\n\r\n        this.scheduler.show_popup({\r\n            target_element: this.$bar,\r\n            title: this.task.name,\r\n            subtitle: subtitle,\r\n            task: this.task,\r\n            x: x,\r\n            y: y,\r\n        });\r\n    }\r\n\r\n    update_bar_position({ x = null, width = null, y = null }) {\r\n        const bar = this.$bar;\r\n        if (x) {\r\n            // get all x values of parent task\r\n            const xs = this.task.dependencies.map((dep) => {\r\n                return this.scheduler.get_bar(dep).$bar.getX();\r\n            });\r\n            // child task must not go before parent\r\n            const valid_x = xs.reduce((prev, curr) => {\r\n                return x >= curr;\r\n            }, x);\r\n            if (!valid_x) {\r\n                width = null;\r\n                return;\r\n            }\r\n            this.update_attr(bar, 'x', x);\r\n        }\r\n        if (width && width >= this.handle_width * 2 + 3) {\r\n            this.update_attr(bar, 'width', width);\r\n        }\r\n        if (y) {\r\n            this.update_attr(bar, 'y', y);\r\n        }\r\n        this.update_label_position();\r\n        this.update_progressbar_position();\r\n        this.update_handle_position();\r\n        this.update_arrow_position();\r\n    }\r\n\r\n    position_changed() {\r\n        let changed = false;\r\n        const { new_start_date, new_end_date } = this.compute_start_end_date();\r\n\r\n        if (Number(this.task._start) !== Number(new_start_date)) {\r\n            changed = true;\r\n            this.task._start = new_start_date;\r\n        }\r\n\r\n        if (Number(this.task._end) !== Number(new_end_date)) {\r\n            changed = true;\r\n            this.task._end = new_end_date;\r\n        }\r\n\r\n        const new_index = this.compute_index();\r\n        const new_row = this.scheduler.options.rows[new_index];\r\n        if (this.task._index !== new_index) {\r\n            changed = true;\r\n            this.task._index = new_index;\r\n            this.task.row = new_row;\r\n        }\r\n\r\n        if (!changed) return;\r\n\r\n        this.scheduler.trigger_event('position_change', [\r\n            this.task,\r\n            new_row,\r\n            new_start_date,\r\n            date_utils.add(new_end_date, -1, 'second'),\r\n        ]);\r\n    }\r\n\r\n    progress_changed() {\r\n        const new_progress = this.compute_progress();\r\n        this.task.progress = new_progress;\r\n        this.scheduler.trigger_event('progress_change', [this.task, new_progress]);\r\n    }\r\n\r\n    set_action_completed() {\r\n        this.action_completed = true;\r\n        setTimeout(() => (this.action_completed = false), 200);\r\n    }\r\n\r\n    compute_start_end_date() {\r\n        const bar = this.$bar;\r\n        const x_in_units = bar.getX() / this.scheduler.options.column_width;\r\n        const new_start_date = date_utils.add(\r\n            this.scheduler.scheduler_start,\r\n            x_in_units * this.scheduler.options.step,\r\n            'hour'\r\n        );\r\n        const width_in_units = bar.getWidth() / this.scheduler.options.column_width;\r\n        const new_end_date = date_utils.add(\r\n            new_start_date,\r\n            width_in_units * this.scheduler.options.step,\r\n            'hour'\r\n        );\r\n\r\n        return { new_start_date, new_end_date };\r\n    }\r\n\r\n    compute_index() {\r\n        const bar = this.$bar;\r\n        const barY = bar.getY();\r\n        let sum_height = this.scheduler.options.header_height + this.scheduler.options.padding / 2;\r\n\r\n        for (let i = 0; i < this.scheduler.rows.length; i++) {\r\n            const row_start = sum_height;\r\n            const row = this.scheduler.rows[i];\r\n            sum_height += row.height;\r\n\r\n            if (barY >= row_start && barY <= sum_height)\r\n                return i;\r\n        }\r\n    }\r\n\r\n    compute_progress() {\r\n        const progress =\r\n            (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100;\r\n        return parseInt(progress, 10);\r\n    }\r\n\r\n    compute_x() {\r\n        const { step, column_width } = this.scheduler.options;\r\n        const task_start = this.task._start;\r\n        const scheduler_start = this.scheduler.scheduler_start;\r\n\r\n        const diff = date_utils.diff(task_start, scheduler_start, 'hour');\r\n        let x = (diff / step) * column_width;\r\n\r\n        if (this.scheduler.view_is('Month')) {\r\n            const diff = date_utils.diff(task_start, scheduler_start, 'day');\r\n            x = (diff * column_width) / 30;\r\n        }\r\n        return x;\r\n    }\r\n\r\n    compute_y() {\r\n        return (\r\n            (this.scheduler.options.padding / 2) +\r\n            (this.scheduler.options.padding + this.scheduler.options.bar_height) * this.task._sub_level_index +\r\n            this.scheduler.rows[this.task._index].y\r\n        );\r\n    }\r\n\r\n    get_snap_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.scheduler.view_is('Week')) {\r\n            rem = dx % (this.scheduler.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.scheduler.options.column_width / 14\r\n                    ? 0\r\n                    : this.scheduler.options.column_width / 7);\r\n        } else if (this.scheduler.view_is('Month')) {\r\n            rem = dx % (this.scheduler.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.scheduler.options.column_width / 60\r\n                    ? 0\r\n                    : this.scheduler.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.scheduler.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.scheduler.options.column_width / 2\r\n                    ? 0\r\n                    : this.scheduler.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    update_attr(element, attr, value) {\r\n        value = +value;\r\n        if (!isNaN(value)) {\r\n            element.setAttribute(attr, value);\r\n        }\r\n        return element;\r\n    }\r\n\r\n    update_progressbar_position() {\r\n        if (this.invalid) return;\r\n        this.$bar_progress.setAttribute('x', this.$bar.getX());\r\n        this.$bar_progress.setAttribute('y', this.$bar.getY());\r\n        this.$bar_progress.setAttribute(\r\n            'width',\r\n            this.$bar.getWidth() * (this.task.progress / 100)\r\n        );\r\n    }\r\n\r\n    update_label_position() {\r\n        const bar = this.$bar,\r\n            label = this.group.querySelector('.bar-label');\r\n\r\n        if (label.getBBox().width > bar.getWidth()) {\r\n            label.classList.add('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() + 5);\r\n        } else {\r\n            label.classList.remove('big');\r\n            label.setAttribute('x', bar.getX() + bar.getWidth() / 2);\r\n        }\r\n        label.setAttribute('y', bar.getY() + bar.getHeight() / 2);\r\n    }\r\n\r\n    update_handle_position() {\r\n        if (this.invalid) return;\r\n        const bar = this.$bar;\r\n\r\n        let handle = this.handle_group.querySelector('.handle.left');\r\n        if (handle) {\r\n            handle.setAttribute('x', bar.getX() + 1)\r\n            handle.setAttribute('y', bar.getY() + 1)\r\n        }\r\n        handle = this.handle_group.querySelector('.handle.right');\r\n        if (handle) {\r\n            handle.setAttribute('x', bar.getEndX() - this.handle_width - 1)\r\n            handle.setAttribute('y', bar.getY() + 1);\r\n        }\r\n        handle = this.group.querySelector('.handle.progress');\r\n        handle &&\r\n            handle.setAttribute('points', this.get_progress_polygon_points());\r\n    }\r\n\r\n    update_arrow_position() {\r\n        this.arrows = this.arrows || [];\r\n        for (let arrow of this.arrows) {\r\n            arrow.update();\r\n        }\r\n    }\r\n}\r\n\r\nfunction isFunction(functionToCheck) {\r\n    var getType = {};\r\n    return (\r\n        functionToCheck &&\r\n        getType.toString.call(functionToCheck) === '[object Function]'\r\n    );\r\n}\r\n","import { createSVG } from './svg_utils';\r\n\r\nexport default class Arrow {\r\n    constructor(scheduler, from_task, to_task) {\r\n        this.scheduler = scheduler;\r\n        this.from_task = from_task;\r\n        this.to_task = to_task;\r\n\r\n        this.calculate_path();\r\n        this.draw();\r\n    }\r\n\r\n    calculate_path() {\r\n        let start_x =\r\n            this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2;\r\n\r\n        const condition = () =>\r\n            this.to_task.$bar.getX() < start_x + this.scheduler.options.padding &&\r\n            start_x > this.from_task.$bar.getX() + this.scheduler.options.padding;\r\n\r\n        while (condition()) {\r\n            start_x -= 10;\r\n        }\r\n\r\n        const start_y =\r\n            this.from_task.$bar.getY() + this.scheduler.options.bar_height;\r\n\r\n        const end_x = this.to_task.$bar.getX() - this.scheduler.options.padding / 2;\r\n        const end_y =\r\n            this.to_task.$bar.getY() + this.scheduler.options.bar_height / 2;\r\n        // ======= TODO Da capire come gestirlo\r\n        //             this.scheduler.options.header_height +\r\n        //             this.scheduler.options.bar_height +\r\n        //             (this.scheduler.options.padding + this.scheduler.options.bar_height) *\r\n        //             this.from_task.task._index +\r\n        //             this.scheduler.options.padding;\r\n\r\n        //         const end_x = this.to_task.$bar.getX() - this.scheduler.options.padding / 2;\r\n        //         const end_y =\r\n        //             this.scheduler.options.header_height +\r\n        //             this.scheduler.options.bar_height / 2 +\r\n        //             (this.scheduler.options.padding + this.scheduler.options.bar_height) *\r\n        //             this.to_task.task._index +\r\n        //             this.scheduler.options.padding;\r\n        // >>>>>>> 5ec8c1cf7d6f126a89a5e5db096915fb66cda0a4\r\n\r\n        const from_is_below_to =\r\n            this.from_task.$bar.getY() > this.to_task.$bar.getY();\r\n        const curve = this.scheduler.options.arrow_curve;\r\n        const clockwise = from_is_below_to ? 1 : 0;\r\n        const curve_y = from_is_below_to ? -curve : curve;\r\n        const offset = from_is_below_to\r\n            ? end_y + this.scheduler.options.arrow_curve\r\n            : end_y - this.scheduler.options.arrow_curve;\r\n\r\n        this.path = `\r\n            M ${start_x} ${start_y}\r\n            V ${offset}\r\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n            L ${end_x} ${end_y}\r\n            m -5 -5\r\n            l 5 5\r\n            l -5 5`;\r\n\r\n        if (\r\n            this.to_task.$bar.getX() <\r\n            this.from_task.$bar.getX() + this.scheduler.options.padding\r\n        ) {\r\n            const down_1 = this.scheduler.options.padding / 2 - curve;\r\n            const down_2 =\r\n                this.to_task.$bar.getY() +\r\n                this.to_task.$bar.getHeight() / 2 -\r\n                curve_y;\r\n            const left = this.to_task.$bar.getX() - this.scheduler.options.padding;\r\n\r\n            this.path = `\r\n                M ${start_x} ${start_y}\r\n                v ${down_1}\r\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\r\n                H ${left}\r\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\r\n                V ${down_2}\r\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\r\n                L ${end_x} ${end_y}\r\n                m -5 -5\r\n                l 5 5\r\n                l -5 5`;\r\n        }\r\n    }\r\n\r\n    draw() {\r\n        this.element = createSVG('path', {\r\n            d: this.path,\r\n            'data-from': this.from_task.task.id,\r\n            'data-to': this.to_task.task.id,\r\n        });\r\n    }\r\n\r\n    update() {\r\n        this.calculate_path();\r\n        this.element.setAttribute('d', this.path);\r\n    }\r\n}\r\n","export default class Popup {\r\n    constructor(parent, custom_html) {\r\n        this.parent = parent;\r\n        this.custom_html = custom_html;\r\n        this.is_showing = false;\r\n        this.make();\r\n    }\r\n\r\n    make() {\r\n        this.parent.innerHTML = `\r\n            <div class=\"title\"></div>\r\n            <div class=\"subtitle\"></div>\r\n            <div class=\"pointer\"></div>\r\n        `;\r\n\r\n        this.hide();\r\n\r\n        this.title = this.parent.querySelector('.title');\r\n        this.subtitle = this.parent.querySelector('.subtitle');\r\n        this.pointer = this.parent.querySelector('.pointer');\r\n    }\r\n\r\n    show(options) {\r\n        if (this.is_showing) return;\r\n        if (!options.target_element) {\r\n            throw new Error('target_element is required to show popup');\r\n        }\r\n        if (!options.position) {\r\n            options.position = 'left';\r\n        }\r\n        const target_element = options.target_element;\r\n\r\n        if (this.custom_html) {\r\n            let html = this.custom_html(options.task);\r\n            html += '<div class=\"pointer\"></div>';\r\n            this.parent.innerHTML = html;\r\n            this.pointer = this.parent.querySelector('.pointer');\r\n        } else {\r\n            // set data\r\n            this.title.innerHTML = options.title;\r\n            this.subtitle.innerHTML = options.subtitle;\r\n            this.parent.style.width = this.parent.clientWidth + 'px';\r\n        }\r\n\r\n        // set position\r\n        let position_meta;\r\n        if (target_element instanceof HTMLElement) {\r\n            position_meta = target_element.getBoundingClientRect();\r\n        } else if (target_element instanceof SVGElement) {\r\n            position_meta = options.target_element.getBBox();\r\n        }\r\n\r\n        if (options.position === 'left') {\r\n            this.parent.style.left =\r\n                position_meta.x + (position_meta.width + 8) + 'px';\r\n            this.parent.style.top = position_meta.y + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(90deg)';\r\n            this.pointer.style.left = '-4px';\r\n            this.pointer.style.top = '2px';\r\n        }\r\n        if (options.position === 'bottom') {\r\n            const middle_popup = this.parent.clientWidth / 2;\r\n            this.parent.style.left = (options.x - middle_popup) + 'px';\r\n            this.parent.style.top = (position_meta.y + position_meta.height + 10) + 'px';\r\n\r\n            this.pointer.style.transform = 'rotateZ(180deg)';\r\n            this.pointer.style.left = middle_popup + 'px';\r\n            this.pointer.style.top = '-10px';\r\n        }\r\n\r\n        // show\r\n        this.parent.style.opacity = 1;\r\n        this.is_showing = true;\r\n    }\r\n\r\n    hide() {\r\n        this.parent.style.opacity = 0;\r\n        this.parent.style.left = 0;\r\n        this.is_showing = false;\r\n    }\r\n}\r\n","import date_utils from './date_utils';\r\nimport { $, createSVG } from './svg_utils';\r\nimport Bar from './bar';\r\nimport Arrow from './arrow';\r\nimport Popup from './popup';\r\n\r\nimport './scheduler.scss';\r\n\r\nconst VIEW_MODE = {\r\n    HOUR: 'Hour',\r\n    QUARTER_DAY: 'Quarter Day',\r\n    HALF_DAY: 'Half Day',\r\n    DAY: 'Day',\r\n    WEEK: 'Week',\r\n    MONTH: 'Month',\r\n    YEAR: 'Year',\r\n};\r\n\r\nexport default class Scheduler {\r\n    constructor(wrapper, tasks, cells, options) {\r\n        this.setup_options(options);\r\n        this.setup_wrapper(wrapper);\r\n        this.setup_cells(cells);\r\n        this.setup_tasks(tasks);\r\n        this.setup_rows();\r\n        // initialize with default view mode\r\n        this.change_view_mode();\r\n        this.bind_events();\r\n    }\r\n\r\n    setup_wrapper(element) {\r\n        let svg_element, wrapper_element;\r\n\r\n        // CSS Selector is passed\r\n        if (typeof element === 'string') {\r\n            element = document.querySelector(element);\r\n        }\r\n\r\n        // get the SVGElement\r\n        if (element instanceof HTMLElement) {\r\n            wrapper_element = element;\r\n            svg_element = element.querySelector('svg');\r\n        } else if (element instanceof SVGElement) {\r\n            svg_element = element;\r\n        } else {\r\n            throw new TypeError(\r\n                'Scheduler only supports usage of a string CSS selector,' +\r\n                \" HTML DOM element or SVG DOM element for the 'element' parameter\"\r\n            );\r\n        }\r\n\r\n        // TODO da capire se da cambiare\r\n        // svg element\r\n        if (!svg_element) {\r\n            // create it\r\n            this.$svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'scheduler',\r\n                id: 'schedulerSvg'\r\n            });\r\n            this.$column_svg = createSVG('svg', {\r\n                append_to: wrapper_element,\r\n                class: 'scheduler',\r\n                id: 'columnSvg'\r\n            });\r\n        } else {\r\n            this.$svg = svg_element;\r\n            this.$svg.classList.add('scheduler');\r\n            this.$column_svg = svg_element;\r\n            this.$column_svg.classList.add('scheduler');\r\n        }\r\n\r\n        // TODO da rivedere questo giro di wrapper\r\n        // wrapper element\r\n        this.$container = document.createElement('div');\r\n        this.$container.classList.add('scheduler-grid-container');\r\n        this.$column_container = document.createElement('div');\r\n        this.$column_container.classList.add('scheduler-columns-container');\r\n\r\n        this.$container_parent = document.createElement('div');\r\n        this.$container_parent.classList.add('scheduler-container');\r\n        this.$container_parent.style.height = this.options.container_height + 'px';\r\n        this.$container_parent.appendChild(this.$column_container);\r\n        this.$container_parent.appendChild(this.$container);\r\n\r\n        const parent_element = this.$svg.parentElement;\r\n        parent_element.appendChild(this.$container_parent);\r\n        this.$column_container.appendChild(this.$column_svg);\r\n        this.$container.appendChild(this.$svg);\r\n\r\n        // popup wrapper\r\n        this.popup_wrapper = document.createElement('div');\r\n        this.popup_wrapper.classList.add('popup-wrapper');\r\n        this.$container.appendChild(this.popup_wrapper);\r\n\r\n        $.on(this.popup_wrapper, 'mouseleave', '.popup-wrapper', (e) => {\r\n            this.hide_popup();\r\n        });\r\n    }\r\n\r\n    setup_options(options) {\r\n        const default_options = {\r\n            container_height: 300,\r\n            header_height: 50,\r\n            column_width: 30,\r\n            fixed_column_width: 120,\r\n            step: 24,\r\n            date_start: null,\r\n            date_end: null,\r\n            view_modes: [...Object.values(VIEW_MODE)],\r\n            bar_height: 20,\r\n            bar_corner_radius: 3,\r\n            arrow_curve: 5,\r\n            padding: 18,\r\n            view_mode: 'Day',\r\n            date_format: 'YYYY-MM-DD',\r\n            popup_position: 'left',\r\n            custom_popup_html: null,\r\n            language: 'en',\r\n            resize_left: false,\r\n            resize_right: false,\r\n            drag_drop_x: false,\r\n            drag_drop_y: false,\r\n            fixed_columns: [],\r\n            rows: [],\r\n            overlap: true,\r\n            moving_scroll_bar: true,\r\n        };\r\n        this.options = Object.assign({}, default_options, options);\r\n\r\n        if (this.options.date_start)\r\n            this.options.date_start = date_utils.parse(this.options.date_start);\r\n        if (this.options.date_end)\r\n            this.options.date_end = date_utils.parse(this.options.date_end);\r\n    }\r\n\r\n    setup_cells(cells) {\r\n        this.cells = cells.filter(t => t.row && t.column);\r\n    }\r\n\r\n    setup_tasks(tasks) {\r\n        // prepare tasks\r\n        this.tasks = tasks.filter(t => t.row).map((task, i) => {\r\n            // convert to Date objects\r\n            task._start = date_utils.parse(task.start);\r\n            task._end = date_utils.parse(task.end);\r\n\r\n            // make task invalid if duration too large\r\n            if (date_utils.diff(task._end, task._start, 'year') > 10) {\r\n                task.end = null;\r\n            }\r\n\r\n            // cache index\r\n            task._index = this.options.rows.indexOf(task.row);\r\n            if (task._index === -1) task._index = 0;\r\n\r\n            // invalid dates\r\n            if (!task.start && !task.end) {\r\n                const today = date_utils.today();\r\n                task._start = today;\r\n                task._end = date_utils.add(today, 2, 'day');\r\n            }\r\n\r\n            if (!task.start && task.end) {\r\n                task._start = date_utils.add(task._end, -2, 'day');\r\n            }\r\n\r\n            if (task.start && !task.end) {\r\n                task._end = date_utils.add(task._start, 2, 'day');\r\n            }\r\n\r\n            // if hours is not set, assume the last day is full day\r\n            // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\r\n            const task_end_values = date_utils.get_date_values(task._end);\r\n            if (task_end_values.slice(3).every((d) => d === 0)) {\r\n                task._end = date_utils.add(task._end, 24, 'hour');\r\n            }\r\n\r\n            task.resize_left = (task.resize_left != null) ? task.resize_left : this.options.resize_left;\r\n            task.resize_right = (task.resize_right != null) ? task.resize_right : this.options.resize_right;\r\n            task.drag_drop_x = (task.drag_drop_x != null) ? task.drag_drop_x : this.options.drag_drop_x;\r\n            task.drag_drop_y = (task.drag_drop_y != null) ? task.drag_drop_y : this.options.drag_drop_y;\r\n\r\n            // invalid flag\r\n            if (!task.start || !task.end) {\r\n                task.invalid = true;\r\n            }\r\n\r\n            // dependencies\r\n            if (typeof task.dependencies === 'string' || !task.dependencies) {\r\n                let deps = [];\r\n                if (task.dependencies) {\r\n                    deps = task.dependencies\r\n                        .split(',')\r\n                        .map((d) => d.trim())\r\n                        .filter((d) => d);\r\n                }\r\n                task.dependencies = deps;\r\n            }\r\n\r\n            // uids\r\n            if (!task.id) {\r\n                task.id = generate_id(task);\r\n            }\r\n\r\n            return task;\r\n        }).filter(t => (\r\n            (!this.options.date_start || t._start >= this.options.date_start) &&\r\n            (!this.options.date_end || t._end <= this.options.date_end))\r\n        );\r\n\r\n        this.setup_dependencies();\r\n    }\r\n\r\n    setup_dependencies() {\r\n        this.dependency_map = {};\r\n        for (let t of this.tasks) {\r\n            for (let d of t.dependencies) {\r\n                this.dependency_map[d] = this.dependency_map[d] || [];\r\n                this.dependency_map[d].push(t.id);\r\n            }\r\n        }\r\n    }\r\n\r\n    refresh(tasks, cells = this.cells, options = this.options) {\r\n        const scroll_pos = this.$svg.parentElement.scrollLeft;\r\n        const scroll_width = this.$svg.parentElement.scrollWidth;\r\n\r\n        this.setup_options(options);\r\n        this.setup_cells(cells);\r\n        this.setup_tasks(tasks);\r\n        this.change_view_mode();\r\n\r\n        this.$svg.parentElement.scrollLeft = scroll_pos * (this.$svg.parentElement.scrollWidth / scroll_width);\r\n    }\r\n\r\n    setup_rows() {\r\n        this.rows = [];\r\n        let sum_y = (this.options.header_height + this.options.padding / 2);\r\n        this.options.rows.forEach(row_id => {\r\n            let row = { id: row_id, height: 0, y: 0, sub_level: [] };\r\n\r\n            row.sub_level = this.compute_row_sub_level(row_id);\r\n            row.height = this.compute_row_height(row.sub_level.length);\r\n\r\n            row.y += sum_y;\r\n            this.rows.push(row);\r\n            sum_y += row.height;\r\n        });\r\n    }\r\n\r\n    change_view_mode(mode = this.options.view_mode) {\r\n        this.update_view_scale(mode);\r\n        this.setup_dates();\r\n        this.render();\r\n        // fire viewmode_change event\r\n        this.trigger_event('view_change', [mode]);\r\n    }\r\n\r\n    update_view_scale(view_mode) {\r\n        this.options.view_mode = view_mode;\r\n        if (view_mode === VIEW_MODE.HOUR) {\r\n            this.options.step = 24 / 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.DAY) {\r\n            this.options.step = 24;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.HALF_DAY) {\r\n            this.options.step = 24 / 2;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\r\n            this.options.step = 24 / 4;\r\n            this.options.column_width = 38;\r\n        } else if (view_mode === VIEW_MODE.WEEK) {\r\n            this.options.step = 24 * 7;\r\n            this.options.column_width = 140;\r\n        } else if (view_mode === VIEW_MODE.MONTH) {\r\n            this.options.step = 24 * 30;\r\n            this.options.column_width = 120;\r\n        } else if (view_mode === VIEW_MODE.YEAR) {\r\n            this.options.step = 24 * 365;\r\n            this.options.column_width = 120;\r\n        }\r\n    }\r\n\r\n    setup_dates() {\r\n        this.setup_scheduler_dates();\r\n        this.setup_date_values();\r\n    }\r\n\r\n    setup_scheduler_dates() {\r\n        this.scheduler_start = this.options.date_start\r\n        this.scheduler_end = this.options.date_end;\r\n\r\n        if (!this.scheduler_start || !this.scheduler_end)\r\n            for (let task of this.tasks) {\r\n                // set global start and end date\r\n                if (!this.scheduler_start || task._start < this.scheduler_start) {\r\n                    this.scheduler_start = task._start;\r\n                }\r\n                if (!this.scheduler_end || task._end > this.scheduler_end) {\r\n                    this.scheduler_end = task._end;\r\n                }\r\n            }\r\n\r\n        this.scheduler_start = date_utils.start_of(this.scheduler_start, 'day');\r\n        this.scheduler_end = date_utils.start_of(this.scheduler_end, 'day');\r\n\r\n        // add date padding on both sides\r\n        if (!this.options.date_start) {\r\n            if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n                this.scheduler_start = date_utils.add(this.scheduler_start, -7, 'day');\r\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                this.scheduler_start = date_utils.start_of(this.scheduler_start, 'year');\r\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n                this.scheduler_start = date_utils.add(this.scheduler_start, -2, 'year');\r\n            } else {\r\n                this.scheduler_start = date_utils.add(this.scheduler_start, -1, 'month');\r\n            }\r\n        }\r\n\r\n        if (!this.options.date_end) {\r\n            if (this.view_is([VIEW_MODE.HOUR, VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 7, 'day');\r\n            } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 1, 'year');\r\n            } else if (this.view_is(VIEW_MODE.YEAR)) {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 2, 'year');\r\n            } else {\r\n                this.scheduler_end = date_utils.add(this.scheduler_end, 1, 'month');\r\n            }\r\n        }\r\n    }\r\n\r\n    setup_date_values() {\r\n        this.dates = [];\r\n        let cur_date = null;\r\n\r\n        while (cur_date === null || cur_date < this.scheduler_end) {\r\n            if (!cur_date) {\r\n                cur_date = date_utils.clone(this.scheduler_start);\r\n            } else {\r\n                if (this.view_is(VIEW_MODE.YEAR)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'year');\r\n                } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n                    cur_date = date_utils.add(cur_date, 1, 'month');\r\n                } else {\r\n                    cur_date = date_utils.add(\r\n                        cur_date,\r\n                        this.options.step,\r\n                        'hour'\r\n                    );\r\n                }\r\n            }\r\n            this.dates.push(cur_date);\r\n        }\r\n    }\r\n\r\n    bind_events() {\r\n        this.bind_grid_events();\r\n        this.bind_cell_events();\r\n        this.bind_bar_events();\r\n    }\r\n\r\n    render() {\r\n        this.clear();\r\n        this.setup_layers();\r\n        this.make_fixed_columns();\r\n        this.make_grid();\r\n        this.make_dates();\r\n        this.make_bars();\r\n        this.make_arrows();\r\n        this.map_arrows_on_bars();\r\n        this.set_width();\r\n        this.set_scroll_position();\r\n    }\r\n\r\n    setup_layers() {\r\n        this.layers = {};\r\n        this.fixed_col_layers = {};\r\n        const layers = ['grid', 'arrow', 'progress', 'bar', 'details', 'date'];\r\n        const fixed_col_layers = ['grid', 'cell', 'header'];\r\n        // make group layers\r\n        for (let layer of layers) {\r\n            this.layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$svg,\r\n            });\r\n        }\r\n        for (let layer of fixed_col_layers) {\r\n            this.fixed_col_layers[layer] = createSVG('g', {\r\n                class: layer,\r\n                append_to: this.$column_svg\r\n            });\r\n        }\r\n    }\r\n\r\n    // TODO refactor with single functions?\r\n    make_fixed_columns() {\r\n        // make_grid_background\r\n        const column_grid_width = this.options.fixed_columns.length * this.options.fixed_column_width;\r\n        const sum_rows_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\r\n        const grid_height = sum_rows_height; //+ this.options.header_height + (this.options.padding / 2);\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: column_grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.fixed_col_layers.grid\r\n        });\r\n        $.attr(this.$column_svg, {\r\n            height: grid_height + 30,\r\n            width: column_grid_width,\r\n        });\r\n\r\n        // make_grid_rows // praticamente è identica, cambia solo il layer e la width\r\n        const rows_layer = createSVG('g', { append_to: this.fixed_col_layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.fixed_col_layers.grid });\r\n\r\n        const row_width = this.options.fixed_columns.length * this.options.fixed_column_width;\r\n\r\n        let i = 0;\r\n\r\n        for (let row of this.options.rows) {\r\n\r\n            const row_height = this.rows[i].height;\r\n            const row_y = this.rows[i].y;\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                'data-id': row,\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            i++;\r\n        }\r\n\r\n        // make_grid_header\r\n        const header_width = this.options.fixed_columns.length * this.options.fixed_column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.fixed_col_layers.header\r\n        });\r\n\r\n        // make_grid_ticks\r\n        let tick_x = this.options.fixed_column_width;\r\n        let tick_y = 0;\r\n        let tick_height = sum_rows_height;\r\n        for (let _ of this.options.fixed_columns) {\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: 'tick thick',\r\n                append_to: this.fixed_col_layers.grid,\r\n            });\r\n\r\n            tick_x += this.options.fixed_column_width;\r\n        }\r\n\r\n        // make_dates -> header\r\n        const pos_y = this.options.header_height;\r\n        let pos_x = this.options.fixed_column_width / 2;\r\n        for (let column of this.options.fixed_columns) {\r\n            createSVG('text', {\r\n                x: pos_x,\r\n                y: pos_y,\r\n                innerHTML: column,\r\n                class: 'lower-text',\r\n                append_to: this.fixed_col_layers.header\r\n            });\r\n            pos_x += (pos_x * 2);\r\n        }\r\n\r\n        // make_bars\r\n        this.make_cells();\r\n    }\r\n\r\n    make_cells() {\r\n        for (let r = 0; r < this.options.rows.length; r++) {\r\n            const row_height = this.rows[r].height;\r\n            const row_y = this.rows[r].y;\r\n\r\n            for (let c = 0; c < this.options.fixed_columns.length; c++) {\r\n                const cell_wrapper = createSVG('g', {\r\n                    class: 'cell-wrapper',\r\n                    'data-row-id': this.options.rows[r],\r\n                    'data-col-id': this.options.fixed_columns[c],\r\n                    append_to: this.fixed_col_layers.cell,\r\n                });\r\n\r\n                createSVG('rect', {\r\n                    x: c * this.options.fixed_column_width,\r\n                    y: row_y,\r\n                    width: this.options.fixed_column_width,\r\n                    height: row_height,\r\n                    append_to: cell_wrapper,\r\n                });\r\n\r\n                const cell = this.cells.find(t => t.row === this.options.rows[r] && t.column === this.options.fixed_columns[c]);\r\n                if (cell) {\r\n                    createSVG('text', {\r\n                        x: this.options.fixed_column_width / 2 + c * this.options.fixed_column_width,\r\n                        y: 24 + row_y,\r\n                        innerHTML: ((String(cell.value).slice(0, 25)) + (String(cell.value).length > 25 ? \"...\" : \"\")),\r\n                        class: 'lower-text',\r\n                        append_to: cell_wrapper\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid() {\r\n        this.make_grid_background();\r\n        this.make_grid_rows();\r\n        this.make_grid_header();\r\n        this.make_grid_ticks();\r\n        this.make_grid_highlights();\r\n    }\r\n\r\n    make_grid_background() {\r\n        const grid_width = this.dates.length * this.options.column_width;\r\n        const sum_rows_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\r\n        const grid_height = sum_rows_height; //+ this.options.header_height + (this.options.padding / 2);\r\n\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: grid_width,\r\n            height: grid_height,\r\n            class: 'grid-background',\r\n            append_to: this.layers.grid,\r\n        });\r\n\r\n        $.attr(this.$svg, {\r\n            height: grid_height,\r\n            width: '100%',\r\n        });\r\n    }\r\n\r\n    make_grid_rows() {\r\n        const rows_layer = createSVG('g', { append_to: this.layers.grid });\r\n        const lines_layer = createSVG('g', { append_to: this.layers.grid });\r\n\r\n        const row_width = this.dates.length * this.options.column_width;\r\n\r\n        let i = 0;\r\n\r\n        for (let row of this.options.rows) {\r\n            const row_height = this.rows[i].height;\r\n            const row_y = this.rows[i].y;\r\n\r\n            createSVG('rect', {\r\n                x: 0,\r\n                y: row_y,\r\n                width: row_width,\r\n                height: row_height,\r\n                class: 'grid-row',\r\n                'data-id': row,\r\n                append_to: rows_layer,\r\n            });\r\n\r\n            createSVG('line', {\r\n                x1: 0,\r\n                y1: row_y + row_height,\r\n                x2: row_width,\r\n                y2: row_y + row_height,\r\n                class: 'row-line',\r\n                append_to: lines_layer,\r\n            });\r\n\r\n            i++;\r\n        }\r\n    }\r\n\r\n    make_grid_header() {\r\n        const header_width = this.dates.length * this.options.column_width;\r\n        const header_height = this.options.header_height + 10;\r\n        createSVG('rect', {\r\n            x: 0,\r\n            y: 0,\r\n            width: header_width,\r\n            height: header_height,\r\n            class: 'grid-header',\r\n            append_to: this.layers.date,\r\n        });\r\n    }\r\n\r\n    make_grid_ticks() {\r\n        const sum_rows_height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height;\r\n        let tick_x = 0;\r\n        let tick_y = 0;\r\n        let tick_height = sum_rows_height;\r\n\r\n        for (let date of this.dates) {\r\n            let tick_class = 'tick';\r\n            // thick tick for monday\r\n            if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick tick for first week\r\n            if (\r\n                this.view_is(VIEW_MODE.WEEK) &&\r\n                date.getDate() >= 1 &&\r\n                date.getDate() < 8\r\n            ) {\r\n                tick_class += ' thick';\r\n            }\r\n            // thick ticks for quarters\r\n            if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\r\n                tick_class += ' thick';\r\n            }\r\n\r\n            createSVG('path', {\r\n                d: `M ${tick_x} ${tick_y} v ${tick_height}`,\r\n                class: tick_class,\r\n                append_to: this.layers.grid,\r\n            });\r\n\r\n            if (this.view_is(VIEW_MODE.MONTH)) {\r\n                tick_x +=\r\n                    (date_utils.get_days_in_month(date) *\r\n                        this.options.column_width) /\r\n                    30;\r\n            } else {\r\n                tick_x += this.options.column_width;\r\n            }\r\n        }\r\n    }\r\n\r\n    make_grid_highlights() {\r\n        // highlight today's date\r\n        if (this.view_is(VIEW_MODE.DAY)) {\r\n            const x =\r\n                (date_utils.diff(date_utils.today(), this.scheduler_start, 'hour') /\r\n                    this.options.step) +\r\n                this.options.column_width;\r\n            const y = (this.options.header_height +\r\n                this.options.padding / 2);\r\n\r\n            const width = this.options.column_width;\r\n            const height = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height -\r\n                (this.options.header_height +\r\n                    this.options.padding / 2);\r\n\r\n            createSVG('rect', {\r\n                x,\r\n                y,\r\n                width,\r\n                height,\r\n                class: 'today-highlight',\r\n                append_to: this.layers.grid,\r\n            });\r\n        }\r\n    }\r\n\r\n    make_dates() {\r\n        for (let date of this.get_dates_to_draw()) {\r\n            createSVG('text', {\r\n                x: date.lower_x,\r\n                y: date.lower_y,\r\n                innerHTML: date.lower_text,\r\n                class: 'lower-text',\r\n                append_to: this.layers.date,\r\n            });\r\n\r\n            if (date.upper_text) {\r\n                const $upper_text = createSVG('text', {\r\n                    x: date.upper_x,\r\n                    y: date.upper_y,\r\n                    innerHTML: date.upper_text,\r\n                    class: 'upper-text',\r\n                    append_to: this.layers.date,\r\n                });\r\n\r\n                // remove out-of-bound dates\r\n                if (\r\n                    $upper_text.getBBox().x2 > this.layers.grid.getBBox().width\r\n                ) {\r\n                    $upper_text.remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    get_dates_to_draw() {\r\n        let last_date_info = null;\r\n        const dates = this.dates.map((date) => {\r\n            const d = this.get_date_info(date, last_date_info);\r\n            last_date_info = d;\r\n            return d;\r\n        });\r\n        return dates;\r\n    }\r\n\r\n    get_date_info(date, last_date_info) {\r\n        let last_date = null;\r\n        if (last_date_info) {\r\n            last_date = last_date_info.date;\r\n        } else {\r\n            last_date = date_utils.add(date, 1, 'year');\r\n        }\r\n        const date_text = {\r\n            Hour_lower: date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Quarter Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            'Half Day_lower': date_utils.format(\r\n                date,\r\n                'HH',\r\n                this.options.language\r\n            ),\r\n            Day_lower:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Week_lower:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : date_utils.format(date, 'D', this.options.language),\r\n            Month_lower: date_utils.format(date, 'MMMM', this.options.language),\r\n            Year_lower: date_utils.format(date, 'YYYY', this.options.language),\r\n            Hour_upper:\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Quarter Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date_utils.format(date, 'D MMM', this.options.language)\r\n                    : '',\r\n            'Half Day_upper':\r\n                date.getDate() !== last_date.getDate()\r\n                    ? date.getMonth() !== last_date.getMonth()\r\n                        ? date_utils.format(\r\n                            date,\r\n                            'D MMM',\r\n                            this.options.language\r\n                        )\r\n                        : date_utils.format(date, 'D', this.options.language)\r\n                    : '',\r\n            Day_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Week_upper:\r\n                date.getMonth() !== last_date.getMonth()\r\n                    ? date_utils.format(date, 'MMMM', this.options.language)\r\n                    : '',\r\n            Month_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n            Year_upper:\r\n                date.getFullYear() !== last_date.getFullYear()\r\n                    ? date_utils.format(date, 'YYYY', this.options.language)\r\n                    : '',\r\n        };\r\n\r\n        let column_width = this.options.column_width;\r\n        if (this.view_is(VIEW_MODE.MONTH)) {\r\n            column_width =\r\n                (date_utils.get_days_in_month(date) * column_width) / 30;\r\n        }\r\n\r\n        const base_pos = {\r\n            x: last_date_info\r\n                ? last_date_info.base_pos_x + last_date_info.column_width\r\n                : 0,\r\n            lower_y: this.options.header_height,\r\n            upper_y: this.options.header_height - 25,\r\n        };\r\n\r\n        const x_pos = {\r\n            Hour_lower: 0,\r\n            Hour_upper: column_width * 24 / 2,\r\n            'Quarter Day_lower': (column_width * 4) / 2,\r\n            'Quarter Day_upper': 0,\r\n            'Half Day_lower': (column_width * 2) / 2,\r\n            'Half Day_upper': 0,\r\n            Day_lower: column_width / 2,\r\n            Day_upper: (column_width * 30) / 2,\r\n            Week_lower: 0,\r\n            Week_upper: (column_width * 4) / 2,\r\n            Month_lower: column_width / 2,\r\n            Month_upper: (column_width * 12) / 2,\r\n            Year_lower: column_width / 2,\r\n            Year_upper: (column_width * 30) / 2,\r\n        };\r\n\r\n        return {\r\n            date,\r\n            column_width,\r\n            base_pos_x: base_pos.x,\r\n            upper_text: date_text[`${this.options.view_mode}_upper`],\r\n            lower_text: date_text[`${this.options.view_mode}_lower`],\r\n            upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\r\n            upper_y: base_pos.upper_y,\r\n            lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\r\n            lower_y: base_pos.lower_y,\r\n        };\r\n    }\r\n\r\n    make_bars() {\r\n        this.bars = this.tasks.map((task) => {\r\n            const bar = new Bar(this, task);\r\n            this.layers.bar.appendChild(bar.group);\r\n            return bar;\r\n        });\r\n    }\r\n\r\n    make_arrows() {\r\n        this.arrows = [];\r\n        for (let task of this.tasks) {\r\n            let arrows = [];\r\n            arrows = task.dependencies\r\n                .map((task_id) => {\r\n                    const dependency = this.get_task(task_id);\r\n                    if (!dependency) return;\r\n                    const arrow = new Arrow(\r\n                        this,\r\n                        this.get_bar(dependency.id), // from_task\r\n                        this.get_bar(task.id) // to_task\r\n                    );\r\n                    this.layers.arrow.appendChild(arrow.element);\r\n                    return arrow;\r\n                })\r\n                .filter(Boolean); // filter falsy values\r\n            this.arrows = this.arrows.concat(arrows);\r\n        }\r\n    }\r\n\r\n    map_arrows_on_bars() {\r\n        for (let bar of this.bars) {\r\n            bar.arrows = this.arrows.filter((arrow) => {\r\n                return (\r\n                    arrow.from_task.task.id === bar.task.id ||\r\n                    arrow.to_task.task.id === bar.task.id\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    set_width() {\r\n        const cur_width = this.$svg.getBoundingClientRect().width;\r\n        const actual_width = this.$svg\r\n            .querySelector('.grid .grid-row')\r\n            .getAttribute('width');\r\n        if (cur_width < actual_width) {\r\n            this.$svg.setAttribute('width', actual_width);\r\n        }\r\n    }\r\n\r\n    set_scroll_position() {\r\n        const parent_element = this.$svg.parentElement;\r\n        if (!parent_element) return;\r\n\r\n        const hours_before_first_task = date_utils.diff(\r\n            this.get_oldest_starting_date(),\r\n            this.scheduler_start,\r\n            'hour'\r\n        );\r\n\r\n        const scroll_pos =\r\n            (hours_before_first_task / this.options.step) *\r\n            this.options.column_width -\r\n            this.options.column_width;\r\n\r\n        parent_element.scrollLeft = scroll_pos;\r\n    }\r\n\r\n    bind_grid_events() {\r\n        $.on(this.$svg, 'click', '.grid-row, .grid-header', () => {\r\n            this.unselect_all();\r\n            this.hide_popup();\r\n        });\r\n\r\n        $.on(this.$svg, 'dblclick', '.grid-row', (e) => {\r\n            const data_id = e.target.getAttribute('data-id');\r\n\r\n            const x_in_units = e.offsetX / this.options.column_width;\r\n            const datetime = date_utils.add(\r\n                this.scheduler_start,\r\n                x_in_units * this.options.step,\r\n                'hour');\r\n\r\n            this.trigger_event('grid_dblclick', [data_id, datetime]);\r\n        });\r\n\r\n        $.on(this.$container, 'scroll', e => {\r\n            this.$column_container.scrollTop = e.currentTarget.scrollTop;\r\n            this.layers.date.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\r\n            this.fixed_col_layers.header.setAttribute('transform', 'translate(0,' + e.currentTarget.scrollTop + ')');\r\n        });\r\n    }\r\n\r\n    bind_cell_events() {\r\n        $.on(this.$column_svg, 'dblclick', '.cell-wrapper', (e) => {\r\n            const cell_wrapper = $.closest('.cell-wrapper', e.target);\r\n            const data_row_id = cell_wrapper.getAttribute('data-row-id');\r\n            const data_col_id = cell_wrapper.getAttribute('data-col-id');\r\n            this.trigger_event('cell_dblclick', [data_row_id, data_col_id]);\r\n        });\r\n    }\r\n\r\n    bind_bar_events() {\r\n        let is_dragging = false;\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing_left = false;\r\n        let is_resizing_right = false;\r\n        let parent_bar_id = null;\r\n        let bars = []; // instanceof Bars, the dragged bar and its children\r\n        let max_y = 0;\r\n        const min_y = this.options.header_height + (this.options.padding / 2);\r\n        this.bar_being_dragged = null; // instanceof dragged bar\r\n\r\n        function action_in_progress() {\r\n            return is_dragging || is_resizing_left || is_resizing_right;\r\n        }\r\n\r\n        $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\r\n            const bar_wrapper = $.closest('.bar-wrapper', element);\r\n\r\n            if (element.classList.contains('left')) {\r\n                is_resizing_left = true;\r\n            } else if (element.classList.contains('right')) {\r\n                is_resizing_right = true;\r\n            } else if (element.classList.contains('bar-wrapper')) {\r\n                is_dragging = true;\r\n            }\r\n\r\n            bar_wrapper.classList.add('active');\r\n\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            parent_bar_id = bar_wrapper.getAttribute('data-id');\r\n            const ids = [\r\n                parent_bar_id,\r\n                ...this.get_all_dependent_tasks(parent_bar_id),\r\n            ];\r\n            bars = ids.map((id) => {\r\n                const bar = this.get_bar(id);\r\n                if (parent_bar_id === id) {\r\n                    this.bar_being_dragged = bar;\r\n                }\r\n                const $bar = bar.$bar;\r\n                $bar.ox = $bar.getX();\r\n                $bar.oy = $bar.getY();\r\n                $bar.owidth = $bar.getWidth();\r\n                $bar.finaldx = 0;\r\n                $bar.finaldy = 0;\r\n                return bar;\r\n            });\r\n\r\n            is_resizing_left = is_resizing_left && this.bar_being_dragged.task.resize_left;\r\n            is_resizing_right = is_resizing_right && this.bar_being_dragged.task.resize_right;\r\n            is_dragging = is_dragging && (this.bar_being_dragged.task.drag_drop_x || this.bar_being_dragged.task.drag_drop_y);\r\n            max_y = this.rows[this.rows.length - 1].y + this.rows[this.rows.length - 1].height + this.options.bar_height;\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!action_in_progress()) return;\r\n            const dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            this.hide_popup();\r\n\r\n            // update the dragged bar\r\n            const bar_being_dragged = this.bar_being_dragged;\r\n            if (is_resizing_left) {\r\n                bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\r\n                bar_being_dragged.update_bar_position({\r\n                    x:\r\n                        bar_being_dragged.$bar.ox +\r\n                        bar_being_dragged.$bar.finaldx,\r\n                    width:\r\n                        bar_being_dragged.$bar.owidth -\r\n                        bar_being_dragged.$bar.finaldx,\r\n                });\r\n            } else if (is_resizing_right) {\r\n                bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\r\n                bar_being_dragged.update_bar_position({\r\n                    width:\r\n                        bar_being_dragged.$bar.owidth +\r\n                        bar_being_dragged.$bar.finaldx,\r\n                });\r\n            } else if (is_dragging) {\r\n                if (bar_being_dragged.task.drag_drop_x) {\r\n\r\n                    if (this.options.moving_scroll_bar) {\r\n                        this.moving_scroll_bar(e);\r\n                    }\r\n\r\n                    bar_being_dragged.$bar.finaldx = this.get_snap_x_position(dx);\r\n                    bar_being_dragged.update_bar_position({\r\n                        x:\r\n                            bar_being_dragged.$bar.ox +\r\n                            bar_being_dragged.$bar.finaldx\r\n                    });\r\n                }\r\n                if (bar_being_dragged.task.drag_drop_y) {\r\n                    const y = bar_being_dragged.$bar.oy + dy;\r\n                    if (y < min_y) {\r\n                        dy = min_y - bar_being_dragged.$bar.oy;\r\n                    } else if (y > max_y) {\r\n                        dy = max_y - bar_being_dragged.$bar.oy;\r\n                    }\r\n                    bar_being_dragged.$bar.finaldy = this.get_snap_y_position(dy);\r\n                    bar_being_dragged.update_bar_position({\r\n                        y:\r\n                            bar_being_dragged.$bar.oy +\r\n                            bar_being_dragged.$bar.finaldy\r\n                    });\r\n                }\r\n            }\r\n\r\n            // update children\r\n            bars.forEach((bar) => {\r\n                if (bar.task.id === parent_bar_id) {\r\n                    return;\r\n                }\r\n                const $bar = bar.$bar;\r\n                $bar.finaldx = this.get_snap_x_position(dx);\r\n                this.hide_popup();\r\n                if (is_resizing_left) {\r\n                    bar.update_bar_position({\r\n                        x: $bar.ox + $bar.finaldx,\r\n                    });\r\n                } else if (is_dragging) {\r\n                    bar.update_bar_position({\r\n                        x: $bar.ox + $bar.finaldx,\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', (e) => {\r\n            if (action_in_progress()) {\r\n                bars.forEach((bar) => {\r\n                    bar.group.classList.remove('active');\r\n\r\n                    const $bar = bar.$bar;\r\n                    const start_row_index = bar.task._index;\r\n\r\n                    if ($bar.finaldx || $bar.finaldy) {\r\n                        bar.position_changed();\r\n                        bar.set_action_completed();\r\n                        if (this.options.overlap) {\r\n                            this.overlap(start_row_index, bar.task._index, $bar.finaldx, $bar.finaldy);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.bar_being_dragged = null;\r\n            is_dragging = false;\r\n            is_resizing_left = false;\r\n            is_resizing_right = false;\r\n        });\r\n\r\n        this.bind_bar_progress();\r\n    }\r\n\r\n    bind_bar_progress() {\r\n        let x_on_start = 0;\r\n        let y_on_start = 0;\r\n        let is_resizing = null;\r\n        let bar = null;\r\n        let $bar_progress = null;\r\n        let $bar = null;\r\n\r\n        $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\r\n            is_resizing = true;\r\n            x_on_start = e.offsetX;\r\n            y_on_start = e.offsetY;\r\n\r\n            const $bar_wrapper = $.closest('.bar-wrapper', handle);\r\n            const id = $bar_wrapper.getAttribute('data-id');\r\n            bar = this.get_bar(id);\r\n\r\n            $bar_progress = bar.$bar_progress;\r\n            $bar = bar.$bar;\r\n\r\n            $bar_progress.finaldx = 0;\r\n            $bar_progress.owidth = $bar_progress.getWidth();\r\n            $bar_progress.min_dx = -$bar_progress.getWidth();\r\n            $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth();\r\n        });\r\n\r\n        $.on(this.$svg, 'mousemove', (e) => {\r\n            if (!is_resizing) return;\r\n            let dx = e.offsetX - x_on_start;\r\n            let dy = e.offsetY - y_on_start;\r\n\r\n            if (dx > $bar_progress.max_dx) {\r\n                dx = $bar_progress.max_dx;\r\n            }\r\n            if (dx < $bar_progress.min_dx) {\r\n                dx = $bar_progress.min_dx;\r\n            }\r\n\r\n            const $handle = bar.$handle_progress;\r\n            $.attr($bar_progress, 'width', $bar_progress.owidth + dx);\r\n            $.attr($handle, 'points', bar.get_progress_polygon_points());\r\n            $bar_progress.finaldx = dx;\r\n        });\r\n\r\n        $.on(this.$svg, 'mouseup', () => {\r\n            is_resizing = false;\r\n            if (!($bar_progress && $bar_progress.finaldx)) return;\r\n            bar.progress_changed();\r\n            bar.set_action_completed();\r\n        });\r\n    }\r\n\r\n    compute_row_sub_level(row_id) {\r\n        const task_in_same_row = this.tasks.filter(task => task.row === row_id);\r\n        //ordina per data le task in quella riga\r\n        task_in_same_row.sort((a, b) => a._start - b._start);\r\n\r\n        let sub_levels = [];\r\n\r\n        task_in_same_row.forEach(task => {\r\n            let i = 0;\r\n            // Trova l'indice del sotto livello in cui inserire questa task\r\n            for (i = 0; i < sub_levels.length; i++) {\r\n                const last_task_in_sub_level = sub_levels[i][sub_levels[i].length - 1];\r\n                if (task._start >= last_task_in_sub_level._end)\r\n                    break;\r\n            }\r\n\r\n            task._sub_level_index = i;\r\n            if (!sub_levels[task._sub_level_index])\r\n                sub_levels[task._sub_level_index] = [];\r\n\r\n            sub_levels[task._sub_level_index].push(task);\r\n        });\r\n\r\n        return sub_levels;\r\n    }\r\n\r\n    compute_row_height(nlevels) {\r\n        nlevels = nlevels > 0 ? nlevels : 1;\r\n        const row_height = (this.options.bar_height + this.options.padding) * nlevels;\r\n        return row_height;\r\n    }\r\n\r\n    compute_row_y() {\r\n        let sum_y = this.options.header_height + this.options.padding / 2;\r\n        this.rows.forEach(row => {\r\n            row.y = sum_y;\r\n            sum_y += row.height;\r\n        });\r\n    }\r\n\r\n    overlap(start_row_index, end_row_index, finaldx, finaldy) {\r\n        let render = false;\r\n\r\n        const end_row = this.rows[end_row_index];\r\n        const new_end_sub_level = this.compute_row_sub_level(end_row.id);\r\n        // if ((finaldy != 0 && (new_end_sub_level.length === end_row.sub_level.length)) ||\r\n        //     (finaldx != 0 && ((new_end_sub_level.length === end_row.sub_level.length) && (new_end_sub_level !== end_row.sub_level)))) {\r\n        //     end_row.sub_level = new_end_sub_level;\r\n        //     end_row.height = this.compute_row_height(end_row.sub_level.length);\r\n        //     render = true;\r\n        // }\r\n\r\n        // if (start_row_index != end_row_index) {\r\n        //     const start_row = this.rows[start_row_index];\r\n        //     const new_start_sub_level = this.compute_row_sub_level(start_row.id);\r\n        //     if ((new_start_sub_level.length != 0 && (new_start_sub_level.length != start_row.sub_level.length))) {\r\n        //         start_row.sub_level = new_start_sub_level;\r\n        //         start_row.height = this.compute_row_height(start_row.sub_level.length);\r\n        //         render = true;\r\n        //     }\r\n        // }\r\n        if (new_end_sub_level !== end_row.sub_level) {\r\n            end_row.sub_level = new_end_sub_level;\r\n            end_row.height = this.compute_row_height(end_row.sub_level.length);\r\n            render = true;\r\n        }\r\n\r\n        if (start_row_index != end_row_index) {\r\n            const start_row = this.rows[start_row_index];\r\n            const new_start_sub_level = this.compute_row_sub_level(start_row.id);\r\n            if (new_start_sub_level.length != 0 && (new_start_sub_level.length != start_row.sub_level.length)) {\r\n                start_row.sub_level = new_start_sub_level;\r\n                start_row.height = this.compute_row_height(start_row.sub_level.length);\r\n                render = true;\r\n            }\r\n        }\r\n\r\n        if (render) {\r\n            this.compute_row_y();\r\n            const scrollLeft = this.$container.scrollLeft;\r\n            const scrollTop = this.$container.scrollTop;\r\n            this.render();\r\n            this.$container.scrollLeft = scrollLeft;\r\n            this.$container.scrollTop = scrollTop;\r\n        }\r\n    }\r\n\r\n    moving_scroll_bar(e) {\r\n        //Variabile che serve per aggiornare la scrollbar\r\n        var scroll_bar = this.$svg.parentElement;\r\n        //coordinate x e y del mouse\r\n        var viewportX = e.clientX;\r\n        var viewportY = e.clientY;\r\n        //edges del container\r\n        var edgeTop = this.$container.offsetTop + this.options.header_height + this.options.padding + (this.options.padding / 2);\r\n        var edgeLeft = this.$container.offsetLeft + this.options.fixed_column_width * 2;\r\n        var edgeBottom = this.$container.offsetHeight;\r\n        var edgeRight = this.$container.offsetWidth;\r\n        //variabili per capire in quale punto ci si trova\r\n        var isInLeftEdge = (viewportX < edgeLeft);\r\n        var isInRightEdge = (viewportX > edgeRight);\r\n        var isInTopEdge = (viewportY < edgeTop);\r\n        var isInBottomEdge = (viewportY > edgeBottom);\r\n        // If the mouse is not in the viewport edge, there's no need to calculate\r\n        // anything else.\r\n\r\n        //I massimi sono larghezza e atezza del container\r\n        var maxScrollX = this.$container.scrollWidth;\r\n        var maxScrollY = this.$container.scrollHeight - this.$container.offsetHeight - this.options.padding;\r\n        // Get the current scroll position of the document.(container)\r\n        var currentScrollX = this.$container.scrollLeft;\r\n        var currentScrollY = this.$container.scrollTop;\r\n        // As we examine the mousemove event, we want to adjust the window scroll in\r\n        // immediate response to the event; but, we also want to continue adjusting\r\n        // the window scroll if the user rests their mouse in the edge boundary. To\r\n        // do this, we'll invoke the adjustment logic immediately.\r\n        (function checkForWindowScroll() {\r\n            if (adjustWindowScroll(currentScrollX, currentScrollY)) {\r\n            }\r\n        })();\r\n        // Adjust the window scroll based on the user's mouse position. Returns True\r\n        // or False depending on whether or not the window scroll was changed.\r\n        function adjustWindowScroll(currentScrollX, currentScrollY) {\r\n            // Determine if the window can be scrolled in any particular direction.\r\n            var canScrollUp = (currentScrollY > 0);\r\n            var canScrollDown = (currentScrollY < maxScrollY);\r\n            var canScrollLeft = (currentScrollX > 0);\r\n            var canScrollRight = (currentScrollX < maxScrollX);\r\n\r\n            var nextScrollX = currentScrollX;\r\n            var nextScrollY = currentScrollY;\r\n\r\n            //Serve a calcolare la velocità con cui scrollare\r\n            var maxStep = 30;\r\n\r\n            // Should we scroll left?\r\n            if (isInLeftEdge && canScrollLeft) {\r\n                var intensity = ((edgeLeft - viewportX) / edgeLeft);\r\n                nextScrollX = (nextScrollX - (maxStep * intensity));\r\n                // Should we scroll right?\r\n            } else if (isInRightEdge && canScrollRight) {\r\n                var intensity = ((viewportX - edgeRight) / edgeLeft);\r\n                nextScrollX = (nextScrollX + (maxStep * intensity));\r\n            }\r\n\r\n            // Should we scroll up?\r\n            if (isInTopEdge && canScrollUp) {\r\n                var intensity = ((edgeTop - viewportY) / edgeTop);\r\n                nextScrollY = (nextScrollY - (maxStep * intensity));\r\n                // Should we scroll down?\r\n            } else if (isInBottomEdge && canScrollDown) {\r\n                var intensity = ((viewportY - edgeBottom) / edgeTop);\r\n                nextScrollY = (nextScrollY + (maxStep * intensity));\r\n            }\r\n\r\n            nextScrollX = Math.max(0, Math.min(maxScrollX, nextScrollX));\r\n            nextScrollY = Math.max(0, Math.min(maxScrollY, nextScrollY));\r\n\r\n            if (\r\n                (nextScrollX !== currentScrollX) ||\r\n                (nextScrollY !== currentScrollY)\r\n            ) {\r\n                scroll_bar.scrollLeft = nextScrollX;\r\n                scroll_bar.scrollTop = nextScrollY;\r\n                return (true);\r\n            } else {\r\n                return (false);\r\n            }\r\n        }\r\n    }\r\n\r\n    get_all_dependent_tasks(task_id) {\r\n        let out = [];\r\n        let to_process = [task_id];\r\n        while (to_process.length) {\r\n            const deps = to_process.reduce((acc, curr) => {\r\n                acc = acc.concat(this.dependency_map[curr]);\r\n                return acc;\r\n            }, []);\r\n\r\n            out = out.concat(deps);\r\n            to_process = deps.filter((d) => !to_process.includes(d));\r\n        }\r\n\r\n        return out.filter(Boolean);\r\n    }\r\n\r\n    get_snap_x_position(dx) {\r\n        let odx = dx,\r\n            rem,\r\n            position;\r\n\r\n        if (this.view_is(VIEW_MODE.WEEK)) {\r\n            rem = dx % (this.options.column_width / 7);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 14\r\n                    ? 0\r\n                    : this.options.column_width / 7);\r\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\r\n            rem = dx % (this.options.column_width / 30);\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 60\r\n                    ? 0\r\n                    : this.options.column_width / 30);\r\n        } else {\r\n            rem = dx % this.options.column_width;\r\n            position =\r\n                odx -\r\n                rem +\r\n                (rem < this.options.column_width / 2\r\n                    ? 0\r\n                    : this.options.column_width);\r\n        }\r\n        return position;\r\n    }\r\n\r\n    get_snap_y_position(dy) {\r\n        let ody = dy,\r\n            rem,\r\n            position;\r\n        const row_height = this.options.bar_height + this.options.padding;\r\n        rem = Math.abs(ody) % row_height;\r\n        position = ody - rem + (rem < row_height / 2 ? 0 : row_height);\r\n        if (ody < 0) {\r\n            position = Math.abs(ody) - rem + (rem < row_height / 2 ? 0 : row_height);\r\n            position = -position;\r\n        }\r\n        return position;\r\n    }\r\n\r\n    unselect_all() {\r\n        [...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\r\n            el.classList.remove('active');\r\n        });\r\n    }\r\n\r\n    view_is(modes) {\r\n        if (typeof modes === 'string') {\r\n            return this.options.view_mode === modes;\r\n        }\r\n\r\n        if (Array.isArray(modes)) {\r\n            return modes.some((mode) => this.options.view_mode === mode);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    get_task(id) {\r\n        return this.tasks.find((task) => {\r\n            return task.id === id;\r\n        });\r\n    }\r\n\r\n    get_bar(id) {\r\n        return this.bars.find((bar) => {\r\n            return bar.task.id === id;\r\n        });\r\n    }\r\n\r\n    show_popup(options) {\r\n        if (!this.popup) {\r\n            this.popup = new Popup(\r\n                this.popup_wrapper,\r\n                this.options.custom_popup_html\r\n            );\r\n        }\r\n        options.position = this.options.popup_position;\r\n        this.popup.show(options);\r\n    }\r\n\r\n    hide_popup() {\r\n        this.popup && this.popup.hide();\r\n    }\r\n\r\n    trigger_event(event, args) {\r\n        if (this.options['on_' + event]) {\r\n            this.options['on_' + event].apply(null, args);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the oldest starting date from the list of tasks\r\n     *\r\n     * @returns Date\r\n     * @memberof Scheduler\r\n     */\r\n    get_oldest_starting_date() {\r\n        return this.tasks\r\n            .map((task) => task._start)\r\n            .reduce((prev_date, cur_date) =>\r\n                cur_date <= prev_date ? cur_date : prev_date\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Clear all elements from the parent svg element\r\n     *\r\n     * @memberof Scheduler\r\n     */\r\n    clear() {\r\n        this.$svg.innerHTML = '';\r\n        this.$column_svg.innerHTML = '';\r\n    }\r\n}\r\n\r\nScheduler.VIEW_MODE = VIEW_MODE;\r\n\r\nfunction generate_id(task) {\r\n    return task.name + '_' + Math.random().toString(36).slice(2, 12);\r\n}\r\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","scheduler","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","handle_width","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","resize_right","resize_left","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","contains","show_popup","offsetX","relatedTarget","hide_popup","unselect_all","trigger_event","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_progressbar_position","update_handle_position","update_arrow_position","position_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","new_index","compute_index","new_row","rows","_index","row","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","scheduler_start","width_in_units","barY","sum_height","header_height","padding","row_start","task_start","view_is","_sub_level_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","is_showing","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","middle_popup","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Scheduler","wrapper","tasks","cells","setup_options","setup_wrapper","setup_cells","setup_tasks","setup_rows","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$column_svg","$container","createElement","$column_container","$container_parent","container_height","parentElement","popup_wrapper","default_options","fixed_column_width","date_start","date_end","view_modes","view_mode","date_format","popup_position","custom_popup_html","drag_drop_x","drag_drop_y","fixed_columns","overlap","moving_scroll_bar","assign","filter","t","column","start","end","indexOf","every","deps","trim","random","toString","generate_id","setup_dependencies","dependency_map","refresh","scroll_pos","scrollLeft","scroll_width","scrollWidth","sum_y","row_id","sub_level","compute_row_sub_level","compute_row_height","mode","update_view_scale","setup_dates","render","setup_scheduler_dates","setup_date_values","scheduler_end","dates","cur_date","bind_grid_events","bind_cell_events","bind_bar_events","clear","setup_layers","make_fixed_columns","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","fixed_col_layers","layer","column_grid_width","sum_rows_height","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","header","tick_x","tick_height","_","pos_y","pos_x","make_cells","r","c","cell_wrapper","cell","find","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date_info","get_date_info","last_date","date_text","Hour_lower","Day_lower","Week_lower","Month_lower","Year_lower","Hour_upper","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","base_pos_x","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","get_oldest_starting_date","data_id","datetime","scrollTop","currentTarget","data_row_id","data_col_id","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","max_y","min_y","action_in_progress","bar_being_dragged","bar_wrapper","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","finaldy","dy","get_snap_x_position","get_snap_y_position","start_row_index","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","task_in_same_row","sub_levels","last_task_in_sub_level","nlevels","compute_row_y","end_row_index","end_row","new_end_sub_level","start_row","new_start_sub_level","scroll_bar","viewportX","clientX","viewportY","clientY","edgeTop","offsetTop","edgeLeft","offsetLeft","edgeBottom","offsetHeight","edgeRight","offsetWidth","isInLeftEdge","isInRightEdge","isInTopEdge","isInBottomEdge","maxScrollX","maxScrollY","scrollHeight","currentScrollX","currentScrollY","canScrollUp","canScrollDown","canScrollLeft","canScrollRight","nextScrollX","nextScrollY","maxStep","max","min","adjustWindowScroll","out","to_process","acc","ody","abs","querySelectorAll","el","modes","Array","isArray","some","popup","args","apply","prev_date"],"mappings":"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"}